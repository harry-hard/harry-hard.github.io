<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>注意事项1 :: Hacker Site</title><link>http://hacker0x0ff.red/reflectivedllinjection/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/index.html</link><description>在编写dll部分时，为了方便执行dll，我写了一个程序快速执行dll
HMODULE dllname = LoadLibraryA("dll.dll"); if (!dllname) { printf("dllname don't exitsts!\n"); return 0; } ReflectiveLoaderFunc myfuc = (ReflectiveLoaderFunc)GetProcAddress(dllname, "ReflectiveLoader"); myfuc(); 然而这样的程序在反射式dll处理重定位表时会出大问题： • 通过 LoadLibrary 加载的DLL已被系统修改（重定位+导入表处理），.reloc 节可能被丢弃或擦写。
及其重要的一点是不要提前返回，因为反射式注入的dll代码无法及时调试，所以一定要勤用反汇编软件查看内存分配，或在注入器代码中内嵌调试语句。</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="http://hacker0x0ff.red/reflectivedllinjection/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/index.xml" rel="self" type="application/rss+xml"/></channel></rss>